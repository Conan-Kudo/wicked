
wickedd:
	- bug: linkUp on an interface that's up never returns the
	  event callback.
	- bug: sometimes wpa supplicant just stops scanning
	- support global (non-interface) routes
	- support ppp: have a deviceNew method that associates a pppN
	  and use deviceChange to bring up pppd.
	- handle SIGTERM/SIGINT: bring down addrconf services, restore
	  resolv.conf etc.
	- write addrconf leases to a file
	- when a wlan device changes association, tell dhcp about it
	  so that it can request a new lease

netinfo:
	- Introduce an <access-provider> abstraction; this can be either
	  a wireless network (ESSID, security information); an Internet
	  dialup network (eg providing a phone number, security information),
	  a mobile IP provider (UMTS), etc.

ifconfig
	- use wpa_supplicant for 802.1x too
	- disable IPv6 on a device if requested
	- support ppp, pppoe

ibft:
	- ibft entries may refer to plain eth devices (easy) or vlans.
	  the latter are more difficult, as they do not exist at the time
	  we want to find out about them.
	  Options:

	   a) when trying to identify an ibft device that specifies a VLAN
	      tag, we create the vlan device on the fly

	   b) we change the way we create devices. Rather than having a per
	      link type factory function, we use a different mechanism to
	      infer the factory interface to use with a netdev config.
	      This allows us to use an <ibft> element and an ibft factory.

	      One side effect of this might be that the distinction between
	      device creation and discovery is blurred.

	   c) We create a fake ibft link layer type, and an ibft factory
	      interface which "creates" the device - either by returning
	      the object path of the ethernet device, or by creating the
	      VLAN device.

	   d) We special case ibft. Rather than having wickedd fudge the
	      device creation and configuration for us, we just have it
	      create the XML config for us and return it to us.
	      This could even be scripted.

overall
	- Add INSTALL file describing how to build wicked

extensions
	- support openvpn
	- add support conversion to a different file format when running extensions
	- escape/reject shell metacharacters when expanding start/stop command

events
	- how to send events to a number of listeners without
	  blocking on a SOCK_STREAM send?

	  Use SOCK_DGRAM sockets. Listeners establish themselves
	  by sending a LISTEN_ENABLE message to the server,
	  which records the sender address.

	  Any notifications are sent to all recorded listener addresses.
	  If a send fails, the address is removed from the list
	  of listeners.

other link layers, totally unsupported as of yet
	- infiniband
	- token ring
	- isdn, ppp, slip
