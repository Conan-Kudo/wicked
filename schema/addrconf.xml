<!--
     Schema definition for wicked addrconf services

     Copyright (C) 2012, Olaf Kirch <okir@suse.de>
  -->

<!-- =================================================
     Generic Addrconf facilities
     ================================================= -->
<service name="addrconf" interface="org.opensuse.Network.Addrconf" object-class="addrconf-device">
  <define name="lease-type" class="dict">
    <state type="uint32" />  	<!-- This should really be an enum -->
    <acquired type="uint32" />	<!-- timestamp -->
    <update type="uint32" />	<!-- bitmap -->

    <uuid type="uuid-type" />
    <hostname type="string" />
    <addresses type="network-interface:assigned-address-list" />
    <routes type="network-interface:assigned-route-list" />

    <resolver class="dict">
      <default-domain type="string" />
      <servers class="array" element-type="string" />
      <search class="array" element-type="string" />
    </resolver>

    <log-servers class="array" element-type="string" />
    <ntp-servers class="array" element-type="string" />
    <slp-servers class="array" element-type="string" />
    <slp-scopes class="array" element-type="string" />
    <sip-servers class="array" element-type="string" />
    <lpr-servers class="array" element-type="string" />

    <netbios-name-servers class="array" element-type="string" />
    <netbios-dd-servers class="array" element-type="string" />
    <netbios-domain type="string" />
    <netbios-scope type="string" />
  </define>

  <signal name="LeaseAcquired">
    <arguments>
      <uuid type="uuid-type"/>
      <lease type="lease-type" />
    </arguments>
  </signal>

  <signal name="LeaseReleased">
    <arguments>
      <uuid type="uuid-type"/>
      <lease type="lease-type" />
    </arguments>
  </signal>

  <signal name="LeaseLost">
    <arguments>
      <uuid type="uuid-type"/>
      <lease type="lease-type" />
    </arguments>
  </signal>
</service>

<!-- =================================================
     Static IPv4 Address configuration service
     ================================================= -->
<service name="ipv4:static" interface="org.opensuse.Network.Addrconf.ipv4.static" object-class="netif">
  <define name="request" class="dict">
    <address type="network-interface:assigned-address" />
    <route type="network-interface:assigned-route" />
  </define>
  <define name="properties" type="interface:addrconf-lease"/>

  <method name="requestLease">
    <arguments>
      <!-- Note: all addresses are expected to be IPv4 -->
      <config type="request">
        <meta:mapping document-node="ipv4:static" skip-unless-present="true"/>
      </config>
    </arguments>
    <return>
      <interface:callback-info/>
    </return>
  </method>

  <method name="dropLease">
    <return>
      <interface:callback-info/>
    </return>
  </method>
</service>


<!-- =================================================
     Static IPv6 Address configuration service
     ================================================= -->
<service name="ipv6:static" interface="org.opensuse.Network.Addrconf.ipv6.static" object-class="netif">
  <define name="request" class="dict">
    <address type="network-interface:assigned-address" />
    <route type="network-interface:assigned-route" />
  </define>
  <define name="properties" type="interface:addrconf-lease"/>

  <method name="requestLease">
    <arguments>
      <!-- Note: all addresses are expected to be IPv6 -->
      <config type="request">
        <meta:mapping document-node="ipv6:static" skip-unless-present="true"/>
      </config>
    </arguments>
    <return>
      <interface:callback-info/>
    </return>
  </method>

  <method name="dropLease">
    <return>
      <interface:callback-info/>
    </return>
  </method>
</service>


<!-- =================================================
     IPv4 DHCP Address configuration service
     ================================================= -->
<service name="ipv4:dhcp" interface="org.opensuse.Network.Addrconf.ipv4.dhcp" object-class="netif">
  <define name="request" class="dict">
    <uuid type="uuid-type"/>
    <enabled type="boolean"/>

    <acquire-timeout type="uint32" />
    <hostname type="string" />
    <client-id type="string" />
    <vendor-class type="string" />
    <lease-time type="uint32" />

    <route-priority type="uint32" />
  </define>
  <define name="properties" type="interface:addrconf-lease"/>

  <method name="requestLease">
    <arguments>
      <config type="request">
        <meta:mapping document-node="ipv4:dhcp" skip-unless-present="true"/>
      </config>
    </arguments>
    <return>
      <interface:callback-info/>
    </return>
  </method>

  <method name="dropLease">
    <return>
      <interface:callback-info/>
    </return>
  </method>
</service>

<!-- =================================================
     IPv6 DHCP Address configuration service
     ================================================= -->
<service name="ipv6:dhcp" interface="org.opensuse.Network.Addrconf.ipv6.dhcp" object-class="netif">
  <define name="request" class="dict">
    <uuid type="uuid-type"/>
    <enabled type="boolean"/>

    <acquire-timeout type="uint32" />
    <hostname type="string" />
    <client-id type="string" />
    <vendor-class type="string" />
    <lease-time type="uint32" />
  </define>
  <define name="properties" type="interface:addrconf-lease"/>

  <method name="requestLease">
    <arguments>
      <config type="request">
        <meta:mapping document-node="ipv6:dhcp" skip-unless-present="true"/>
      </config>
    </arguments>
    <return>
      <interface:callback-info/>
    </return>
  </method>

  <method name="dropLease">
    <return>
      <interface:callback-info/>
    </return>
  </method>
</service>

<!-- =================================================
     IPv4 zeroconf Address configuration service
     ================================================= -->
<service name="ipv4:auto" interface="org.opensuse.Network.Addrconf.ipv4.auto" object-class="netif">
  <define name="request" class="dict">
    <uuid type="uuid-type"/>
    <enabled type="boolean"/>
  </define>
  <define name="properties" type="interface:addrconf-lease"/>

  <method name="requestLease">
    <arguments>
      <config type="request">
        <meta:mapping document-node="ipv4:auto" skip-unless-present="true"/>
      </config>
    </arguments>
    <return>
      <interface:callback-info/>
    </return>
  </method>

  <method name="dropLease">
    <return>
      <interface:callback-info/>
    </return>
  </method>
</service>

