
<service name="bridge" interface="com.suse.Wicked.Bridge" object-class="netif-bridge">

  <define name="port-type" class="dict">
    <!-- The port interface.
      -- It's marked as a netif-reference, meaning that the device name is
      -- optionally resolved by wicked at run time. You can use "classic"
      -- device names such as eth0, but you can also use and <identify>
      -- element to use any of the supported netif naming services
      -->
    <device type="string">
      <meta:netif-reference shared="false"/>
      <meta:require check="netif-child-state" op="changeDevice" min-state="device-up" />
      <meta:require check="netif-child-state" op="login" min-state="link-authenticated" />

      <!-- FIXME: are bridge ports allowed to have addresses configured?
        -- If not, we would have to limit them via max-state="link-up"
	-->
      <meta:require check="netif-child-state" op="linkUp" min-state="link-up" />
    </device>

    <priority type="uint32" constraint="range">
      <min value="0"/>
      <max value="63"/>
    </priority>
    <path-cost type="uint32" />

    <!-- The following fields contain status information only, and should
      -- not appear in configuration files.
      -- These values are ignored when creating a bridge port. -->
    <!-- FIXME: state is really asking for an enum -->
    <state type="uint32" />
    <port-no type="uint32" />
    <port-id type="uint32" />
  </define>

  <!-- This is the linkconfig returned in interface reports -->
  <define name="linkconfig" class="dict">
    <priority type="uint32" />
    <stp type="uint32" constraint="enum">
      <none value="0" />
      <stp value="1" />
      <rstp value="2" />
    </stp>

    <!-- These are floating point values representing seconds -->
    <forward-delay type="double" />
    <aging-time type="double" />
    <hello-time type="double" />
    <max-age type="double" />

    <ports class="array" element-type="port-type" />
  </define>

  <define name="properties" class="dict" extends="linkconfig">
    <!-- add more status information to this -->
  </define>

  <method name="changeDevice">
    <arguments>
      <!-- First and only argument to changeDevice() method is a
        -- "properties" dict.
        -- The mapping info tells the client to take the device
	-- configuration from the <bridge> element, and to skip the
	-- call to changeDevice() if that element isn't there.
	-->
      <config type="properties">
       <meta:mapping document-node="/bridge" skip-unless-present="true" />
      </config>
    </arguments>
  </method>

  <method name="deleteDevice">
    <!-- no arguments, no return code -->
  </method>

  <method name="addPort">
    <arguments>
      <port type="port-type"/>
    </arguments>
  </method>

  <method name="removePort">
    <arguments>
      <port type="string"/>
    </arguments>
  </method>
</service>

<service name="bridge-factory" interface="com.suse.Wicked.Bridge.Factory" object-class="netif-list">
  <method name="newDevice">
    <arguments>
     <name type="string"/>
     <config type="bridge:linkconfig">
      <meta:mapping document-node="/bridge"/>
     </config>
    </arguments>
    <return>
     <string/>
    </return>
  </method>
</service>
