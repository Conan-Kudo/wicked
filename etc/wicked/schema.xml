<define name="ipv4-address">
  <array element-type="byte" minlen="4" maxlen="4" notation="ipv4addr"/>
</define>

<define name="ipv4-address-prefix" class="dict">
  <address type="ipv4-address"/>
  <prefix type="byte"/>
</define>

<define name="ipv6-address">
  <array element-type="byte" minlen="16" maxlen="16" notation="ipv6addr"/>
</define>

<define name="ipv6-address-prefix" class="dict">
  <address type="ipv6-address"/>
  <prefix type="byte"/>
</define>

<define name="ethernet-address">
  <array element-type="byte" minlen="6" maxlen="6" notation="hwaddr"/>
</define>

<!-- This represents a generic network address.
  -- The string notation uses the common numeric representation for
  -- IPv4 and IPv6 addresses (other formats currently not supported).
  -- On the wire, the address is represented in a packed format. -->
<define name="network-address">
  <array element-type="byte" notation="net-address" />
</define>

<define name="network-address-prefix">
  <array element-type="byte" notation="net-address-prefix" />
</define>

<!-- IPv4 address configuration
  -- This is used in the per-interface <static> config as well as the
  -- leases generated by some dynamic address configuration service.
  -->
<define name="ipv4-addrconf" class="dict">
  <!-- statically assigned addresses are addr/prefix, optionally
       accompanied by a peer address (for tunnel setups etc) -->
  <define name="static-address" class="dict">
    <local type="ipv4-address-prefix"/>
    <peer type="ipv4-address"/>
  </define>

  <define name="static-route" class="dict">
    <destination type="ipv4-address-prefix"/>
    <mtu type="uint32"/>
    <tos type="byte"/>

    <define name="ipv4-nexthop" class="dict">
      <gateway type="ipv4-address"/>
      <weight type="uint32"/>
      <!-- Other types of routing info could be added here,
        -- eg for blackhole routes etc. -->
    </define>

    <!-- Can occur one or more times -->
    <nexthop type="ipv4-nexthop"/>
  </define>

  <!-- Can occur one or more times -->
  <address type="static-address"/>

  <!-- Can occur one or more times -->
  <route type="static-route"/>
</define>

<include name="schema/constants.xml"/>
<include name="schema/ethernet.xml"/>
<include name="schema/vlan.xml"/>
<include name="schema/bonding.xml"/>
<include name="schema/bridge.xml"/>
<!--
 -->

<define name="network-interface" class="dict">
 <name type="string"/>

 <!-- These bits must match the definitions in netinfo.h -->
 <status type="uint32" constraint="bitmap">
  <device-up bit="0" />
  <link-up bit="1" />
  <powersave bit="2" />
  <network-up bit="3" />
  <point-to-point bit="4" />
  <arp bit="5" />
  <broadcast bit="6" />
  <multicast bit="7" />
 </status>

 <link class="dict">
  <class type="string"/>
  <mtu type="uint32"/>
 </link>

 <metric type="uint32"/>
 <txqlen type="uint32"/>

 <addrconf class="dict">
   <define name="assigned-address" class="dict">
     <local type="network-address-prefix"/>
     <peer type="network-address"/>

     <!-- This is the addrconf method that owns this address -->
     <owner type="uint32" />
   </define>

   <address type="assigned-address" />
 </addrconf>
</define>

<service name="interface" interface="com.suse.Wicked.Interface" object-class="netif">
  <define name="properties" type="network-interface"/>
</service>

<service name="ipv4:static" interface="com.suse.Wicked.IPv4Address.Static" object-class="netif">
  <define name="addrconf-request" type="ipv4-addrconf" />
  <define name="properties" type="ipv4-addrconf" />

  <method name="configure">
    <arguments>
      <config type="addrconf-request"/>
    </arguments>
  </method>
</service>

