<config>
  <ipv4>
    <enabled/>
  </ipv4>
  <ipv6>
    <enabled/>
  </ipv6>

  <!-- Define where network configuration is stored, and in what format.
       Currently supported are

         suse		sysconfig-based, usually /etc/sysconfig/network
         redhat		sysconfig-based, usually /etc/sysconfig/network
	 netcf-strict	strict netcf syntax, /etc/sysconfig/network/all.xml
	 netcf		enriched netcf syntax, /etc/sysconfig/network/all.xml

       By default, we try to autodetect what schema to use.
   -->
  <!--
   <backend schema="redhat" path="/etc/sysconfig/network"/>
   <backend schema="suse" path="/etc/sysconfig/network"/>
   -->

  <pidfile path="/var/run/wicked.pid" mode="0644"/>
  <socket path="/var/run/wicked.sock" mode="0600"/>
  <policy path="/etc/wicked/policy.xml"/>

  <linktype>
    <extension name="infiniband" type="infiniband">
      <action name="start" command="/etc/wicked/wicked-infiniband start %{@name}"/>
      <action name="stop" command="/etc/wicked/wicked-infiniband stop %{@name}"/>
      <environment putenv="IPOIB_MODE=%{/protocol/infiniband/@mode}"/>
      <environment putenv="IPOIB_UMCAST=%{/protocol/infiniband/@umcast}"/>
    </extension>
  </linktype>

  <addrconf>
  <!-- sample extension for dhcp6
    <extension name="dhcp6" type="dhcp" family="ipv6">
      <pidfile path="/var/run/dhcpcd-%{@name}.pid"/>
      <action name="start" command="/etc/wicked/wicked-dhcp6 start %{@name}"/>
      <action name="stop" command="/etc/wicked/wicked-dhcp6 stop %{@name}"/>
      <environment putenv="DHCP_TIMEOUT=%{/protocol[@family = 'ipv6']/dhcp/lease/@timeout}"/>
      <environment putenv="DHCP_REQ_HOSTNAME=%{/protocol[@family = 'ipv6']/dhcp/request/@hostname}"/>
    </extension>
   -->

     <default-allow-update>
      <all/>
     </default-allow-update>

    <dhcp>
     <allow-update>
      <all/>
     </allow-update>
     <!--
      <vendor-class>somestring</vendor-class>
      <lease-time>7200</lease-time>
      <ignore-server ip="192.168.255.255" />
      <prefer-server ip="10.1.1.1" weight="10" />
     -->
    </dhcp>

    <autoip>
     <allow-update>
      <all/>
     </allow-update>
    </autoip>

    <ibft>
     <allow-update>
      <all/>
     </allow-update>
    </ibft>

  </addrconf>

  <!--
    -- These extensions can be used to invoke helper scripts after updating
    -- specific configuration files.
    -- The extension's name attribute specifies the REST node (eg "system.nis"
    -- refers to "/system/nis") to which to attach the API extension to.
    -- The action name specifies how to use the helper script.
    -- Currently supported:
    --  update:		run this command after any operation that modifies the node
    -->
  <api>
   <!--
   <extension name="system.nis">
    <action name="update" command="/sbin/wicked-helper nis-updated"/>
   </extension>
    -->
  </api>

</config>
