#!/bin/bash
#
# Network interface configuration
#
# Copyright (c) 2001-2002 SuSE Linux AG, Nuernberg, Germany.
# Copyright (c) 2003-2012 SUSE LINUX Products GmbH, Nuernberg, Germany.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA 02111-1307 USA
#
# Author: Michal Svec <msvec@suse.cz>
#         Christian Zoz <zoz@suse.de>
#         Mads Martin JÃ¸rgensen <mmj@suse.de>
#         Marius Tomaschewski <mt@suse.de>
#         Olaf Kirch <okir@suse.de>
#
# $Id: network 1925 2009-10-06 12:46:15Z mt $
#
# /etc/init.d/network
#
### BEGIN INIT INFO
# Provides:		network
# Required-Start:	wicked
# Should-Start:		isdn openibd
# Required-Stop:	wicked
# Should-Stop:		isdn openibd
# Default-Start:	2 3 5
# Default-Stop:		
# Short-Description:	Configure the localfs depending network interfaces
# Description:		Configure the localfs depending network interfaces
#                       and set up routing
### END INIT INFO

ROOTDIR=${0%etc/*}

. /etc/rc.status
rc_reset

cd $ROOTDIR/etc/sysconfig/network
test -f ./config && . ./config
if ! . scripts/functions 2>/dev/null; then
	echo -n "Network: file /etc/sysconfig/network/scripts/functions is missing."
	rc_failed
	rc_status -v
	rc_exit
fi

test "$DEBUG" = "EXTRA" && . scripts/extradebug

# Only use ifup option 'onboot' if booting or changing runlevel
# Therefore we check if we were called from init
BOOT_STAGE=""
if [ -n "$INIT_VERSION" -a -z "$YAST_IS_RUNNING" ] ; then
	MODE=onboot
	BOOT_STAGE=localfs
fi

######################################################################
# Command line parsing
#
SCRIPTNAME=${0##*/}
debug $*

ACTION=$1; shift

if [ "$1" != "-o" ] ; then
	INTERFACE=$1; shift
fi

if [ -n "$1" -a "$1" != "-o" ] ; then
	CONFIG=$INTERFACE; INTERFACE=$1; shift;
fi

test "$1" = "-o" && shift
OPTIONS=$@

while [ $# -gt 0 ]; do
	case $1 in
		boot|onboot) MODE=onboot ;;
		manual)      MODE=manual ;;
		check)       CHECK=check ;;
		debug)       DEBUG=yes ;;
		type=*)      TYPE=${1#type=} ;;
		fake)        FAKE=echo ;;
		skip=*)      SKIP=${1#skip=} ;;
		localfs)     BOOT_STAGE=localfs  ;;
		remotefs)    BOOT_STAGE=remotefs ;;
		*)           mesg "Unknown option '$1'"
		             mesg "options: {[on]boot,hotplug,manual,check,debug,type=<typelist>,fake,localfs,remotefs}"
			     exit 1 ;;
	esac
	shift
done

case $ACTION in
start)
	IFUP_ARGS=""

	# Bring up interfaces that have a bios config
	$WICKED_CLIENT_BIN ifup $IFUP_ARGS --ifconfig FIRMWARE all

	if [ "$MODE" = "onboot" ]; then
		IFUP_ARGS+=" --boot-label boot"
	fi
	if [ -n "$BOOT_STAGE" ]; then
		IFUP_ARGS+=" --boot-stage $BOOT_STAGE"
	fi
	IFUP_ARGS+=" --skip-origin firmware"

	$WICKED_CLIENT_BIN ifup $IFUP_ARGS all

	rc_status -v
	;;

stop)
	$WICKED_CLIENT_BIN ifdown all
	rc_status -v
	;;

try-restart|condrestart)
	$0 status
	if test $? = 0; then
		$0 restart
	else
		rc_reset        # Not running is not a failure.
	fi
	rc_status
	;;

restart)
	$0 stop
	$0 start
	rc_status
	;;

force-reload)
	echo -n "Reload service network"
	$0 try-restart
	rc_status
	;;

reload)
	# Not yet
	rc_failed 3
	rc_status -v
	;;

status)
	echo -n "Checking for service network "
	# Dummy:
	$WICKED_CLIENT_BIN show-xml &>/dev/null
	rc_status -v
	;;

probe)
	#test /etc/wicked/config.xml -nt /var/run/wicked.pid &&
	echo restart
	;;

*)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload}"
	exit 1
	;;

esac
