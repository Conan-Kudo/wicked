#!/bin/sh
#
#     This library is free software; you can redistribute it and/or modify it
#     under the terms of the GNU Lesser General Public License as published by
#     the Free Software Foundation; either version 2.1 of the License, or (at
#     your option) any later version.
#			      
#     This library is distributed in the hope that it will be useful, but
#     WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#     Lesser General Public License for more details.
#      
#     You should have received a copy of the GNU Lesser General Public
#     License along with this library; if not, write to the Free Software
#     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
#     USA.
#
# /etc/init.d/wicked
#   and its symbolic link
# /usr/sbin/rcwicked
#
### BEGIN INIT INFO
# Provides:          wicked
# Required-Start:    $syslog
# Should-Start:      $time 
# Required-Stop:     $syslog 
# Should-Stop:       $null
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: wicked - network configuration infrastructure
# Description:       Start wickedd to allow REST based network configuration
#	wicked is a network configuration infrastructure incorporating
#	a number of existing frameworks into an enterprise class architecture
### END INIT INFO
# 

# Check for missing binary/config (stale symlinks should not happen)
# Note: Special treatment of stop/status for LSB conformance
wicked_BIN=/sbin/wickedd
wicked_CONFIG=/etc/wicked/config.xml
wicked_RUNDIR=/var/run/wicked
if ! [ -x "$wicked_BIN"  ]; then
	case $1 in
	stop)   ;;
	*)	echo -n >&2 "$0: \"$wicked_BIN\" is not executable. Exiting."
		case $1 in
		status) rc_failed 4 ;;
		*)      rc_failed 5 ;;
		esac
		rc_status -v
	;;
	esac
	rc_exit
fi
if ! [ -r "$wicked_CONFIG" ] ; then
	case $1 in
	stop|status) ;;
	*)
		echo -n >&2 "$0: \"$wicked_CONFIG\" config file missed. Exiting."
		rc_failed 6
		rc_status -v
		rc_exit
	;;
	esac
fi

. /etc/rc.status

# Reset status of this service
rc_reset

case "$1" in
    start)
	echo -n "Starting wickedd "
	test -d "$wicked_RUNDIR" || mkdir -p "$wicked_RUNDIR"
	/sbin/startproc $wicked_BIN
	rc_status -v
	;;
    stop)
	echo -n "Shutting down wickedd "
	/sbin/killproc -TERM $wicked_BIN
	rc_status -v
	;;
    try-restart|condrestart)
	## Do a restart only if the service was active before.
	## Note: try-restart is now part of LSB (as of 1.9).
	## RH has a similar command named condrestart.
	if test "$1" = "condrestart"; then
		echo "${attn} Use try-restart ${done}(LSB)${attn} rather than condrestart ${warn}(RH)${norm}"
	fi
	$0 status
	if test $? = 0; then
		$0 restart
	else
		rc_reset	# Not running is not a failure.
	fi
	rc_status
	;;
    restart)
	$0 stop
	$0 start
	rc_status
	;;
    force-reload)
	echo -n "Reload service wickedd "
	/sbin/killproc -HUP $wicked_BIN
	rc_status -v
	## Otherwise:
	#$0 try-restart
	#rc_status
	;;
    reload)
	## Like force-reload, but if daemon does not support
	## signaling, do nothing (!)

	# If it supports signaling:
	echo -n "Reload service wickedd "
	/sbin/killproc -HUP $wicked_BIN
	rc_status -v
	
	## Otherwise if it does not support reload:
	#rc_failed 3
	#rc_status -v
	;;
    status)
	echo -n "Checking for service wickedd "
	## Check status with checkproc(8), if process is running
	## checkproc will return with exit status 0.

	# Return value is slightly different for the status command:
	# 0 - service up and running
	# 1 - service dead, but /var/run/  pid  file exists
	# 2 - service dead, but /var/lock/ lock file exists
	# 3 - service not running (unused)
	# 4 - service status unknown :-(
	# 5--199 reserved (5--99 LSB, 100--149 distro, 150--199 appl.)
	
	# NOTE: checkproc returns LSB compliant status values.
	/sbin/checkproc $wicked_BIN
	# NOTE: rc_status knows that we called this init script with
	# "status" option and adapts its messages accordingly.
	rc_status -v
	;;
    probe)
	## Optional: Probe for the necessity of a reload, print out the
	## argument to this init script which is required for a reload.
	## Note: probe is not (yet) part of LSB (as of 1.9)

	test /etc/wickedd/config.xml -nt /var/run/wicked.pid && echo reload
	;;
    *)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload|probe}"
	exit 1
	;;
esac
rc_exit
